name: Workflow Build
on:
  push:
    branches:
      - main
jobs:
#   test:
#     runs-on: windows-latest
#     steps:
#     - name: test1
#       run: |
#         ping baidu.com
#         ping nerorrlex911.github.io
#     - name: Checkout
#       uses: actions/checkout@master
#       with:
#         persist-credentials: false
#     # 设置Prince环境变量
#     - name: Setup Windows path
#       uses: myci-actions/append-to-path-windows@2
#       with:
#         path: ${{ github.workspace }}\prince-15.1-win64\bin
#         env-var: Path
#     - name: test
#       run: |
#         npx docusaurus-prince-pdf -u https://nerorrlex911.github.io/PoemSuits-Wiki-Docusaurus/intro --output pdf/PoemSuits-Wiki.pdf
#         npx docusaurus-prince-pdf -u https://nerorrlex911.github.io/PoemSuits-Wiki-Docusaurus/en/intro --output pdf/PoemSuits-Wiki-English.pdf
#     # 上传PDF
#     - name: Capture Build Artifacts
#       uses: actions/upload-artifact@v3
#       with:
#         name: Artifacts
#         path: pdf/
#         if-no-files-found: error
  # 自动部署GitPage
  gitpage:
    runs-on: ubuntu-latest
    steps:
    # 拉取代码
    - name: Checkout
      uses: actions/checkout@master
      with:
        persist-credentials: false
    # 编译出静态页面
    - name: Install and Build
      run: npm install && npm run build
    # 塞进gh-pages分支(即部署到GitPage)
    - name: Deploy
      uses: JamesIves/github-pages-deploy-action@releases/v3
      with:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        BRANCH: gh-pages
        FOLDER: build
  # 自动生成PDF
  pdf:
    needs: [ gitpage ]
    runs-on: ubuntu-latest
    steps:
    # 拉取代码
    - name: Checkout
      uses: actions/checkout@master
      with:
        persist-credentials: false
    # 安装PDF转换前置Prince
#     - name: Install Prince
#       run: |
#         curl https://www.princexml.com/download/prince-14.2-linux-generic-x86_64.tar.gz -O
#         tar zxf prince-14.2-linux-generic-x86_64.tar.gz
#         cd prince-14.2-linux-generic-x86_64
#         yes "" | sudo ./install.sh

    # 睡会儿, 等GitPage部署完成
    - name: Sleep for 120 seconds
      run: sleep 120s
      shell: bash
    # 生成PDF
    - name: Build PDF
      run: sudo docker run --rm -v ${{ github.workspace }}/pdf:/app/pdf iseason/docusaurus-to-pdf -u https://nerorrlex911.github.io/PoemSuits-Wiki-Docusaurus/intro --output pdf/PoemSuits-Wiki.pdf
    # 生成英文PDF
#     - name: Build English PDF
#       run: sudo docker run --rm -v ${{ github.workspace }}/pdf:/app/pdf iseason/docusaurus-to-pdf -u https://nerorrlex911.github.io/PoemSuits-Wiki-Docusaurus/en/intro --output pdf/PoemSuits-Wiki-English.pdf
    # 上传PDF
    - name: Capture Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Artifacts
        path: pdf/
        if-no-files-found: error
  # Release
  release:
    needs: [ pdf ]
    runs-on: ubuntu-latest
    steps:
    # 拉取代码
    - name: Checkout Repository
      uses: actions/checkout@v2
    # 下载本体
    - name: Download Content
      uses: actions/download-artifact@v2
      with:
        name: Artifacts
    # 获取序号
    - name: Get Project version
      id: get_version
      run: |
        echo "Project version: $GITHUB_RUN_NUMBER"
        echo "::set-output name=project_version::$GITHUB_RUN_NUMBER"
      env:
        project_version: ${{ steps.get_version.outputs.project_version }}
    # 创建release
    - name: Create Release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.project_version }}
        release_name: Auto Release ${{ steps.get_version.outputs.project_version }}
    # 向release上传PoemSuits-Wiki.pdf
    - name: Upload PDF file to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: PoemSuits-Wiki.pdf
        asset_name: PoemSuits-Wiki.pdf
        asset_content_type: application/zip
    # 向release上传PoemSuits-Wiki-English.pdf
#     - name: Upload PDF file to Release
#       uses: actions/upload-release-asset@v1
#       env:
#         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       with:
#         upload_url: ${{ steps.create-new-release.outputs.upload_url }}
#         asset_path: PoemSuits-Wiki-English.pdf
#         asset_name: PoemSuits-Wiki-English.pdf
#         asset_content_type: application/zip
